{"version":3,"file":"static/js/179.8acd09a9.chunk.js","mappings":"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","sources":["../node_modules/react-use/esm/useToggle.js","../node_modules/@100mslive/react-icons/src/ColoredHandIcon.tsx","../node_modules/@100mslive/react-icons/src/BackwardArrowIcon.tsx","../node_modules/@100mslive/react-icons/src/ForwardArrowIcon.tsx","../node_modules/@100mslive/react-icons/src/PlayIcon.tsx","../node_modules/@100mslive/react-icons/src/PauseIcon.tsx","../node_modules/@100mslive/react-icons/src/VolumeZeroIcon.tsx","../node_modules/@100mslive/react-icons/src/VolumeTwoIcon.tsx","../node_modules/@100mslive/roomkit-react/src/Prebuilt/components/HlsStatsOverlay.jsx","../node_modules/@100mslive/roomkit-react/src/Prebuilt/layouts/HLSView.jsx","../node_modules/@100mslive/roomkit-react/src/Prebuilt/components/HMSVideo/index.ts","../node_modules/@100mslive/roomkit-react/src/Prebuilt/components/HMSVideo/Controls.jsx","../node_modules/@100mslive/roomkit-react/src/Prebuilt/components/HMSVideo/HMSVideo.jsx","../node_modules/@100mslive/roomkit-react/src/Prebuilt/components/HMSVideo/PlayPauseSeekControls.tsx","../node_modules/@100mslive/roomkit-react/src/Prebuilt/components/HMSVideo/PlayPauseButton.tsx","../node_modules/@100mslive/roomkit-react/src/Prebuilt/components/HMSVideo/PlayerContext.tsx","../node_modules/@100mslive/roomkit-react/src/Prebuilt/components/HMSVideo/SeekControl.tsx","../node_modules/@100mslive/roomkit-react/src/Prebuilt/components/HMSVideo/utils.ts","../node_modules/@100mslive/roomkit-react/src/Prebuilt/components/HMSVideo/VideoProgress.tsx","../node_modules/@100mslive/roomkit-react/src/Prebuilt/components/HMSVideo/VideoTime.tsx","../node_modules/@100mslive/roomkit-react/src/Prebuilt/components/HMSVideo/VolumeControl.tsx","../node_modules/@100mslive/roomkit-react/src/Prebuilt/components/HMSVideo/FullscreenButton.tsx","../node_modules/@100mslive/roomkit-react/src/Prebuilt/components/HMSVideo/HLSAutoplayBlockedPrompt.tsx","../node_modules/@100mslive/roomkit-react/src/Prebuilt/components/HMSVideo/HLSCaptionSelector.tsx","../node_modules/@100mslive/roomkit-react/src/Prebuilt/components/HMSVideo/HLSQualitySelector.tsx","../node_modules/@100mslive/roomkit-react/src/Prebuilt/components/HMSVideo/MwebHLSViewTitle.tsx"],"sourcesContent":["import { useReducer } from 'react';\nvar toggleReducer = function (state, nextValue) {\n    return typeof nextValue === 'boolean' ? nextValue : !state;\n};\nvar useToggle = function (initialValue) {\n    return useReducer(toggleReducer, initialValue);\n};\nexport default useToggle;\n","import * as React from 'react';\nimport { SVGProps } from 'react';\nconst SvgColoredHandIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <g clipPath=\"url(#ColoredHandIcon_svg__a)\">\n      <path d=\"M5.747 10.359c.004-.004.01-.005.014-.008v-.002l-.014.01Z\" fill=\"url(#ColoredHandIcon_svg__b)\" />\n      <path\n        d=\"M9.005 8.58c-.953-.954-1.977-.793-2.766-.004L5.106 23.108c0 .137.013.273.02.41l8.152-8.151c-3.411.89-2.409-1.958-3.592-2.694 0 0 1.307-2.105-.68-4.094Z\"\n        fill=\"url(#ColoredHandIcon_svg__c)\"\n      />\n      <path\n        d=\"M34.57 17.645a1.666 1.666 0 0 0-2.357 0l-4.818 4.818-.535-.643 8.005-8.005a2.083 2.083 0 1 0-2.946-2.946l-7.74 7.738-.535-.643L31.92 9.69a2.083 2.083 0 1 0-2.947-2.946l-8.008 8.008-.536-.643 6.103-6.102c.77-.771.918-2.027.229-2.871a2.083 2.083 0 0 0-3.091-.16L5.126 23.519a6.663 6.663 0 0 0 1.934 4.328l6.297 6.297a5 5 0 0 0 7.071 0L34.57 20.002a1.666 1.666 0 0 0 0-2.357Z\"\n        fill=\"url(#ColoredHandIcon_svg__d)\"\n      />\n      <path\n        d=\"M24.258 7.333a1.25 1.25 0 1 0 1.768-1.768 1.25 1.25 0 0 0-1.768 1.768ZM29.561 9.1a1.25 1.25 0 1 0 1.768-1.767A1.25 1.25 0 0 0 29.561 9.1ZM32.508 13.226a1.25 1.25 0 1 0 1.767-1.768 1.25 1.25 0 0 0-1.767 1.768ZM32.802 19.413a.833.833 0 1 0 1.179-1.179.833.833 0 0 0-1.179 1.179Z\"\n        fill=\"#FFF0C9\"\n      />\n    </g>\n    <defs>\n      <linearGradient\n        id=\"ColoredHandIcon_svg__b\"\n        x1={5.742}\n        y1={10.376}\n        x2={5.743}\n        y2={10.377}\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FFC430\" />\n        <stop offset={0.57} stopColor=\"#F8BD29\" />\n        <stop offset={1} stopColor=\"#F0B421\" />\n      </linearGradient>\n      <linearGradient\n        id=\"ColoredHandIcon_svg__c\"\n        x1={5.602}\n        y1={15.715}\n        x2={14.901}\n        y2={15.78}\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop offset={0.282} stopColor=\"#FFC430\" />\n        <stop offset={0.401} stopColor=\"#F8BD2D\" />\n        <stop offset={0.574} stopColor=\"#E5AA23\" />\n        <stop offset={0.78} stopColor=\"#C58A14\" />\n        <stop offset={1} stopColor=\"#9C6000\" />\n      </linearGradient>\n      <linearGradient\n        id=\"ColoredHandIcon_svg__d\"\n        x1={20.364}\n        y1={14.599}\n        x2={19.817}\n        y2={43.562}\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FFC430\" />\n        <stop offset={0.41} stopColor=\"#FEC130\" />\n        <stop offset={0.72} stopColor=\"#FCB730\" />\n        <stop offset={0.998} stopColor=\"#F7A72F\" />\n        <stop offset={1} stopColor=\"#F7A72F\" />\n      </linearGradient>\n      <clipPath id=\"ColoredHandIcon_svg__a\">\n        <path fill=\"currentColor\" d=\"M0 0h40v40H0z\" />\n      </clipPath>\n    </defs>\n  </svg>\n);\nexport default SvgColoredHandIcon;\n","import * as React from 'react';\nimport { SVGProps } from 'react';\nconst SvgBackwardArrowIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M9.792 12.916a.116.116 0 1 1 0 .232.116.116 0 0 1 0-.232Zm1.366.116a1.366 1.366 0 1 0-2.732 0 1.366 1.366 0 0 0 2.732 0ZM3.125 5a.625.625 0 0 0-.625.625v4.444c0 .346.28.625.625.625h4.444a.625.625 0 1 0 0-1.25H3.75V5.625A.625.625 0 0 0 3.125 5Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M9.792 6.99a6.041 6.041 0 0 1 6.042 6.042.625.625 0 1 0 1.25 0 7.291 7.291 0 0 0-7.292-7.291A7.292 7.292 0 0 0 4.93 7.604l-2.223 2a.625.625 0 1 0 .836.93l2.222-2a6.042 6.042 0 0 1 4.027-1.543Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\nexport default SvgBackwardArrowIcon;\n","import * as React from 'react';\nimport { SVGProps } from 'react';\nconst SvgForwardArrowIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M9.792 12.916a.116.116 0 1 0 0 .232.116.116 0 0 0 0-.232Zm-1.366.116a1.366 1.366 0 1 1 2.731 0 1.366 1.366 0 0 1-2.731 0ZM16.458 5c.346 0 .625.28.625.625v4.444c0 .346-.28.625-.625.625h-4.444a.625.625 0 1 1 0-1.25h3.82V5.625c0-.345.28-.625.624-.625Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M9.791 6.99a6.042 6.042 0 0 0-6.041 6.042.625.625 0 1 1-1.25 0 7.292 7.292 0 0 1 7.292-7.291 7.292 7.292 0 0 1 4.861 1.863h.001l2.222 2a.625.625 0 1 1-.836.93l-2.221-2A6.042 6.042 0 0 0 9.79 6.991Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\nexport default SvgForwardArrowIcon;\n","import * as React from 'react';\nimport { SVGProps } from 'react';\nconst SvgPlayIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 49 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <path\n      d=\"M34.34 21.217 19.913 10.67a3.53 3.53 0 0 0-1.693-.647 3.677 3.677 0 0 0-1.82.258 3.223 3.223 0 0 0-1.382 1.084 2.718 2.718 0 0 0-.518 1.574v22.164c.002.557.182 1.102.518 1.573.337.47.816.845 1.382 1.083a3.678 3.678 0 0 0 1.818.259 3.53 3.53 0 0 0 1.693-.646l14.43-10.547c.464-.34.838-.767 1.096-1.25.257-.484.39-1.013.39-1.548 0-.535-.133-1.064-.39-1.548a3.714 3.714 0 0 0-1.097-1.25v-.012Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\nexport default SvgPlayIcon;\n","import * as React from 'react';\nimport { SVGProps } from 'react';\nconst SvgPauseIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 49 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <path d=\"M27.509 10h6.008v28.04H27.51V10ZM14.5 10h6.009v28.04H14.5V10Z\" fill=\"currentColor\" />\n  </svg>\n);\nexport default SvgPauseIcon;\n","import * as React from 'react';\nimport { SVGProps } from 'react';\nconst SvgVolumeZeroIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24px\" height=\"24px\" viewBox=\"0 0 40 40\" fill=\"none\" {...props}>\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M18.77 10.13c.457.22.748.682.748 1.19v18.477a1.32 1.32 0 0 1-2.145 1.03l-6.237-4.99H6.32A1.32 1.32 0 0 1 5 24.517V16.6c0-.729.59-1.32 1.32-1.32h4.816l6.237-4.99a1.32 1.32 0 0 1 1.397-.159Zm-1.892 3.936-4.455 3.563a1.32 1.32 0 0 1-.824.29h-3.96v5.279h3.96c.3 0 .59.102.824.29l4.455 3.563V14.066Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M34.969 15.666a1.32 1.32 0 0 1 0 1.866l-3.027 3.026 3.027 3.026a1.32 1.32 0 0 1-1.867 1.867l-3.026-3.026-3.026 3.026a1.32 1.32 0 0 1-1.867-1.867l3.027-3.026-3.027-3.026a1.32 1.32 0 1 1 1.867-1.866l3.026 3.026 3.026-3.026a1.32 1.32 0 0 1 1.867 0Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\nexport default SvgVolumeZeroIcon;\n","import * as React from 'react';\nimport { SVGProps } from 'react';\nconst SvgVolumeTwoIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24px\" height=\"24px\" viewBox=\"0 0 20 20\" fill=\"none\" {...props}>\n    <path\n      d=\"M14.784 5.192a.654.654 0 0 0-.926.925 5.888 5.888 0 0 1 0 8.325.654.654 0 1 0 .926.925 7.196 7.196 0 0 0 0-10.175Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M12.474 7.5a.654.654 0 1 0-.925.926 2.617 2.617 0 0 1 0 3.7.654.654 0 1 0 .925.925 3.925 3.925 0 0 0 0-5.55Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M9.696 5.7a.654.654 0 0 0-1.063-.51L5.541 7.661H3.154a.654.654 0 0 0-.654.655v3.925c0 .36.293.654.654.654h2.387l3.092 2.473a.654.654 0 0 0 1.063-.51v-9.16ZM6.18 8.827l2.208-1.766v6.436L6.18 11.731a.654.654 0 0 0-.41-.143H3.809V8.97h1.963c.148 0 .293-.05.409-.144Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\nexport default SvgVolumeTwoIcon;\n","import React, { memo } from 'react';\nimport { CrossIcon } from '@100mslive/react-icons';\nimport { Flex } from '../../Layout';\nimport { Text } from '../../Text';\nimport IconButton from '../IconButton';\n\nexport function HlsStatsOverlay({ hlsStatsState, onClose }) {\n  return (\n    <Flex\n      css={{\n        position: 'absolute',\n        width: '$80',\n        marginLeft: '$8',\n        padding: '$8 $8 $10',\n        zIndex: 10,\n        backgroundColor: '$surface_brighter',\n        borderRadius: '$1',\n      }}\n      direction=\"column\"\n    >\n      <IconButton css={{ position: 'absolute', top: '$2', right: '$2' }} onClick={onClose}>\n        <CrossIcon />\n      </IconButton>\n      <HlsStatsRow label=\"URL\">\n        <Flex align=\"center\">\n          <a\n            style={{ cursor: 'pointer', textDecoration: 'underline' }}\n            href={hlsStatsState?.url}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Stream url\n          </a>\n        </Flex>\n      </HlsStatsRow>\n      <HlsStatsRow label=\"Video size\">\n        {` ${hlsStatsState?.videoSize?.width}x${hlsStatsState?.videoSize?.height}`}\n      </HlsStatsRow>\n      <HlsStatsRow label=\"Buffer duration\">{hlsStatsState?.bufferedDuration?.toFixed(2)} </HlsStatsRow>\n      <HlsStatsRow label=\"Connection speed\">\n        {`${(hlsStatsState?.bandwidthEstimate / (1000 * 1000)).toFixed(2)} Mbps`}\n      </HlsStatsRow>\n      <HlsStatsRow label=\"Bitrate\">{`${(hlsStatsState?.bitrate / (1000 * 1000)).toFixed(2)} Mbps`}</HlsStatsRow>\n      <HlsStatsRow label=\"distance from live\">\n        {getDurationFromSeconds(hlsStatsState.distanceFromLive / 1000)}\n      </HlsStatsRow>\n      <HlsStatsRow label=\"Dropped frames\">{hlsStatsState?.droppedFrames}</HlsStatsRow>\n    </Flex>\n  );\n}\n\n/**\n * Extracted from HLS new Player PR.\n * TODO: remove this and use HMSVideoUtils.js\n * when that code is merged\n */\nexport function getDurationFromSeconds(timeInSeconds) {\n  let time = Math.floor(timeInSeconds);\n  const hours = Math.floor(time / 3600);\n  time = time - hours * 3600;\n  const minutes = Math.floor(time / 60);\n  const seconds = Math.floor(time - minutes * 60);\n\n  const prefixedMinutes = `${minutes < 10 ? '0' + minutes : minutes}`;\n  const prefixedSeconds = `${seconds < 10 ? '0' + seconds : seconds}`;\n\n  let videoTimeStr = `${prefixedMinutes}:${prefixedSeconds}`;\n  if (hours) {\n    const prefixedHours = `${hours < 10 ? '0' + hours : hours}`;\n    videoTimeStr = `${prefixedHours}:${prefixedMinutes}:${prefixedSeconds}`;\n  }\n  return videoTimeStr;\n}\n\nconst HlsStatsRow = memo(({ label, children }) => {\n  return (\n    <Flex gap={4} justify=\"center\" css={{ width: '100%' }}>\n      <Text\n        css={{\n          width: '50%',\n          '@md': { fontSize: '$md' },\n          '@sm': { fontSize: '$sm' },\n          // textAlign: \"right\",\n        }}\n      >\n        {label}\n      </Text>\n      <Text\n        css={{\n          '@md': { fontSize: '$md' },\n          '@sm': { fontSize: '$sm' },\n          width: '50%',\n          overflowWrap: 'break-word',\n          // textAlign: \"left\",\n        }}\n      >\n        {children}\n      </Text>\n    </Flex>\n  );\n});\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useFullscreen, useMedia, usePrevious, useToggle } from 'react-use';\nimport { HLSPlaybackState, HMSHLSPlayer, HMSHLSPlayerEvents } from '@100mslive/hls-player';\nimport screenfull from 'screenfull';\nimport { match, P } from 'ts-pattern';\nimport {\n  HLSPlaylistType,\n  HMSNotificationTypes,\n  selectAppData,\n  selectHLSState,\n  selectPeerNameByID,\n  selectPollByID,\n  useHMSActions,\n  useHMSNotifications,\n  useHMSStore,\n  useHMSVanillaStore,\n} from '@100mslive/react-sdk';\nimport { ColoredHandIcon, GoLiveIcon } from '@100mslive/react-icons';\nimport { ChatToggle } from '../components/Footer/ChatToggle';\nimport { HlsStatsOverlay } from '../components/HlsStatsOverlay';\nimport { HMSVideoPlayer } from '../components/HMSVideo';\nimport { FullScreenButton } from '../components/HMSVideo/FullscreenButton';\nimport { HLSAutoplayBlockedPrompt } from '../components/HMSVideo/HLSAutoplayBlockedPrompt';\nimport { HLSCaptionSelector } from '../components/HMSVideo/HLSCaptionSelector';\nimport { HLSQualitySelector } from '../components/HMSVideo/HLSQualitySelector';\nimport { HLSViewTitle } from '../components/HMSVideo/MwebHLSViewTitle';\nimport { HMSPlayerContext } from '../components/HMSVideo/PlayerContext';\nimport { LeaveRoom } from '../components/Leave/LeaveRoom';\nimport { ToastManager } from '../components/Toast/ToastManager';\nimport { Button } from '../../Button';\nimport { IconButton } from '../../IconButton';\nimport { Box, Flex } from '../../Layout';\nimport { Loading } from '../../Loading';\nimport { Text } from '../../Text';\nimport { config, theme, useTheme } from '../../Theme';\nimport { Tooltip } from '../../Tooltip';\nimport { WaitingView } from './WaitingView';\nimport { useSidepaneToggle } from '../components/AppData/useSidepane';\nimport { useRoomLayoutConferencingScreen } from '../provider/roomLayoutProvider/hooks/useRoomLayoutScreen';\nimport { useIsLandscape, useKeyboardHandler } from '../common/hooks';\nimport { APP_DATA, EMOJI_REACTION_TYPE, POLL_STATE, POLL_VIEWS, SIDE_PANE_OPTIONS } from '../common/constants';\n\nlet hlsPlayer;\nconst toastMap = {};\n\nconst ToggleChat = ({ isFullScreen = false }) => {\n  const { elements } = useRoomLayoutConferencingScreen();\n  const sidepane = useHMSStore(selectAppData(APP_DATA.sidePane));\n  const toggleChat = useSidepaneToggle(SIDE_PANE_OPTIONS.CHAT);\n  const showChat = !!elements?.chat;\n  const isMobile = useMedia(config.media.md);\n  const hmsActions = useHMSActions();\n\n  useEffect(() => {\n    match({ sidepane, isMobile, showChat, isFullScreen })\n      .with({ isFullScreen: true }, () => {\n        hmsActions.setAppData(APP_DATA.sidePane, '');\n      })\n      .with({ isMobile: true, showChat: true, sidepane: P.when(value => !value) }, () => {\n        toggleChat();\n      })\n      .with({ showChat: false, isMobile: true, sidepane: SIDE_PANE_OPTIONS.CHAT }, () => {\n        hmsActions.setAppData(APP_DATA.sidePane, '');\n      })\n      .otherwise(() => {\n        //do nothing\n      });\n  }, [sidepane, isMobile, toggleChat, showChat, hmsActions, isFullScreen]);\n  return null;\n};\nconst HLSView = () => {\n  const videoRef = useRef(null);\n  const hlsViewRef = useRef();\n  const { elements } = useRoomLayoutConferencingScreen();\n  const hlsState = useHMSStore(selectHLSState);\n  const enablHlsStats = useHMSStore(selectAppData(APP_DATA.hlsStats));\n  const notification = useHMSNotifications(HMSNotificationTypes.POLL_STOPPED);\n  const hmsActions = useHMSActions();\n  const { themeType } = useTheme();\n  const [streamEnded, setStreamEnded] = useState(false);\n  let [hlsStatsState, setHlsStatsState] = useState(null);\n  const hlsUrl = hlsState.variants[0]?.url;\n  const [availableLayers, setAvailableLayers] = useState([]);\n  const [isVideoLive, setIsVideoLive] = useState(true);\n  const [isCaptionEnabled, setIsCaptionEnabled] = useState(true);\n  const [hasCaptions, setHasCaptions] = useState(false);\n  const [currentSelectedQuality, setCurrentSelectedQuality] = useState(null);\n  const [isHlsAutoplayBlocked, setIsHlsAutoplayBlocked] = useState(false);\n  const [hoverControlsVisible, setHoverControlsVisible] = useState({\n    seekForward: false,\n    pausePlay: false,\n    seekBackward: false,\n  });\n  const [isPaused, setIsPaused] = useState(false);\n  const [show, toggle] = useToggle(false);\n  const lastHlsUrl = usePrevious(hlsUrl);\n  const vanillaStore = useHMSVanillaStore();\n  const [controlsVisible, setControlsVisible] = useState(true);\n  const [isUserSelectedAuto, setIsUserSelectedAuto] = useState(true);\n  const [qualityDropDownOpen, setQualityDropDownOpen] = useState(false);\n  const controlsRef = useRef(null);\n  const controlsTimerRef = useRef();\n  const [seekProgress, setSeekProgress] = useState(false);\n  const isFullScreenSupported = screenfull.isEnabled;\n  const toggleChat = useSidepaneToggle(SIDE_PANE_OPTIONS.CHAT);\n  const showChat = !!elements?.chat;\n\n  const isMobile = useMedia(config.media.md);\n  const isLandscape = useIsLandscape();\n\n  const isFullScreen = useFullscreen(hlsViewRef, show, {\n    onClose: () => toggle(false),\n  });\n  const [showLoader, setShowLoader] = useState(false);\n\n  // FIXME: move this logic to player controller in next release\n  useEffect(() => {\n    /**\n     * @type {HTMLVideoElement} videoEl\n     */\n    const videoEl = videoRef.current;\n    const showLoader = () => setShowLoader(true);\n    const hideLoader = () => setShowLoader(false);\n    videoEl?.addEventListener('playing', hideLoader);\n    videoEl?.addEventListener('waiting', showLoader);\n    return () => {\n      videoEl?.removeEventListener('playing', hideLoader);\n      videoEl?.removeEventListener('waiting', showLoader);\n    };\n  }, []);\n  useEffect(() => {\n    if (streamEnded && lastHlsUrl !== hlsUrl) {\n      setStreamEnded(false);\n    }\n  }, [hlsUrl, streamEnded, lastHlsUrl]);\n\n  useEffect(() => {\n    if (!notification) return;\n    const toastID = toastMap?.[notification.data.id];\n    if (toastID) {\n      ToastManager.removeToast(toastMap[notification.data.id]);\n      delete toastMap[notification.data.id];\n    }\n  }, [notification]);\n\n  useEffect(() => {\n    const videoElem = videoRef.current;\n    const setStreamEndedCallback = () => {\n      setStreamEnded(true);\n      // no point keeping the callback attached once the streaming is ended\n      videoElem?.removeEventListener('ended', setStreamEndedCallback);\n    };\n    videoElem?.addEventListener('ended', setStreamEndedCallback);\n    return () => {\n      videoElem?.removeEventListener('ended', setStreamEndedCallback);\n    };\n  }, [hlsUrl]);\n\n  const handleQuality = useCallback(\n    quality => {\n      if (hlsPlayer) {\n        setIsUserSelectedAuto(quality.height?.toString().toLowerCase() === 'auto');\n        hlsPlayer?.setLayer(quality);\n      }\n    },\n    [availableLayers], //eslint-disable-line\n  );\n  /**\n   * initialize HMSHLSPlayer and add event listeners.\n   */\n  useEffect(() => {\n    let videoEl = videoRef.current;\n    const manifestLoadedHandler = ({ layers }) => {\n      setAvailableLayers(layers);\n      setHasCaptions(hlsPlayer?.hasCaptions());\n    };\n    const layerUpdatedHandler = ({ layer }) => {\n      setCurrentSelectedQuality(layer);\n    };\n    const metadataLoadedHandler = ({ payload, ...rest }) => {\n      const parsePayload = str => {\n        try {\n          return JSON.parse(str);\n        } catch (e) {\n          return str;\n        }\n      };\n      const duration = rest.duration;\n      const parsedPayload = parsePayload(payload);\n      // check if poll happened\n      if (parsedPayload.startsWith('poll:')) {\n        const pollId = parsedPayload.substr(parsedPayload.indexOf(':') + 1);\n        const poll = vanillaStore.getState(selectPollByID(pollId));\n        const pollStartedBy = vanillaStore.getState(selectPeerNameByID(poll.startedBy)) || 'Participant';\n        // launch poll\n        if (!toastMap[pollId]) {\n          const toastID = ToastManager.addToast({\n            title: `${pollStartedBy} started a ${poll.type}: ${poll.title}`,\n            action: (\n              <Button\n                onClick={() => {\n                  hmsActions.setAppData(APP_DATA.pollState, {\n                    [POLL_STATE.pollInView]: pollId,\n                    [POLL_STATE.view]: POLL_VIEWS.VOTE,\n                  });\n                  hmsActions.setAppData(APP_DATA.sidePane, SIDE_PANE_OPTIONS.POLLS);\n                }}\n                variant=\"standard\"\n                css={{\n                  backgroundColor: '$surface_bright',\n                  fontWeight: '$semiBold',\n                  color: '$on_surface_high',\n                  p: '$xs $md',\n                }}\n              >\n                {poll.type === 'quiz' ? 'Answer' : 'Vote'}\n              </Button>\n            ),\n            duration: Infinity,\n          });\n          toastMap[pollId] = toastID;\n        }\n        return;\n      }\n      switch (parsedPayload.type) {\n        case EMOJI_REACTION_TYPE:\n          window.showFlyingEmoji?.({ emojiId: parsedPayload?.emojiId, senderId: parsedPayload?.senderId });\n          break;\n        default: {\n          const toast = {\n            title: `Payload from timed Metadata ${parsedPayload}`,\n            duration: duration || 3000,\n          };\n          console.debug('Added toast ', JSON.stringify(toast));\n          ToastManager.addToast(toast);\n          break;\n        }\n      }\n    };\n    const handleError = data => {\n      console.error('[HLSView] error in hls', `${data}`);\n    };\n    const handleNoLongerLive = ({ isLive }) => {\n      setIsVideoLive(isLive);\n    };\n\n    const playbackEventHandler = data => {\n      setIsPaused(data.state === HLSPlaybackState.paused);\n      setHoverControlsVisible({\n        ...hoverControlsVisible,\n        pausePlay: true,\n      });\n      setTimeout(() => {\n        setHoverControlsVisible({\n          ...hoverControlsVisible,\n          pausePlay: false,\n        });\n      }, 2000);\n    };\n    const captionEnabledEventHandler = isCaptionEnabled => {\n      setIsCaptionEnabled(isCaptionEnabled);\n    };\n\n    const handleAutoplayBlock = data => setIsHlsAutoplayBlocked(!!data);\n    if (videoEl && hlsUrl) {\n      hlsPlayer = new HMSHLSPlayer(hlsUrl, videoEl);\n      hlsPlayer.on(HMSHLSPlayerEvents.SEEK_POS_BEHIND_LIVE_EDGE, handleNoLongerLive);\n      hlsPlayer.on(HMSHLSPlayerEvents.TIMED_METADATA_LOADED, metadataLoadedHandler);\n      hlsPlayer.on(HMSHLSPlayerEvents.ERROR, handleError);\n      hlsPlayer.on(HMSHLSPlayerEvents.PLAYBACK_STATE, playbackEventHandler);\n      hlsPlayer.on(HMSHLSPlayerEvents.CAPTION_ENABLED, captionEnabledEventHandler);\n      hlsPlayer.on(HMSHLSPlayerEvents.AUTOPLAY_BLOCKED, handleAutoplayBlock);\n\n      hlsPlayer.on(HMSHLSPlayerEvents.MANIFEST_LOADED, manifestLoadedHandler);\n      hlsPlayer.on(HMSHLSPlayerEvents.LAYER_UPDATED, layerUpdatedHandler);\n      return () => {\n        hlsPlayer.off(HMSHLSPlayerEvents.SEEK_POS_BEHIND_LIVE_EDGE, handleNoLongerLive);\n        hlsPlayer.off(HMSHLSPlayerEvents.ERROR, handleError);\n        hlsPlayer.off(HMSHLSPlayerEvents.TIMED_METADATA_LOADED, metadataLoadedHandler);\n        hlsPlayer.off(HMSHLSPlayerEvents.PLAYBACK_STATE, playbackEventHandler);\n        hlsPlayer.off(HMSHLSPlayerEvents.CAPTION_ENABLED, captionEnabledEventHandler);\n\n        hlsPlayer.off(HMSHLSPlayerEvents.AUTOPLAY_BLOCKED, handleAutoplayBlock);\n        hlsPlayer.off(HMSHLSPlayerEvents.MANIFEST_LOADED, manifestLoadedHandler);\n        hlsPlayer.off(HMSHLSPlayerEvents.LAYER_UPDATED, layerUpdatedHandler);\n        hlsPlayer.reset();\n      };\n    }\n  }, [hlsUrl, vanillaStore, hmsActions]);\n\n  /**\n   * initialize and subscribe to hlsState\n   */\n  useEffect(() => {\n    const onHLSStats = state => setHlsStatsState(state);\n    if (enablHlsStats) {\n      hlsPlayer?.on(HMSHLSPlayerEvents.STATS, onHLSStats);\n    } else {\n      hlsPlayer?.off(HMSHLSPlayerEvents.STATS, onHLSStats);\n    }\n    return () => {\n      hlsPlayer?.off(HMSHLSPlayerEvents.STATS, onHLSStats);\n    };\n  }, [enablHlsStats]);\n\n  const unblockAutoPlay = async () => {\n    try {\n      await hlsPlayer.play();\n      setIsHlsAutoplayBlocked(false);\n    } catch (error) {\n      console.error('Tried to unblock Autoplay failed with', error.message);\n    }\n  };\n\n  const sfnOverlayClose = () => {\n    hmsActions.setAppData(APP_DATA.hlsStats, !enablHlsStats);\n  };\n\n  useEffect(() => {\n    if (controlsVisible && isFullScreen && !qualityDropDownOpen) {\n      if (controlsTimerRef.current) {\n        clearTimeout(controlsTimerRef.current);\n      }\n    }\n    if (!isFullScreen && controlsTimerRef.current) {\n      clearTimeout(controlsTimerRef.current);\n    }\n    controlsTimerRef.current = setTimeout(() => {\n      if (!seekProgress) {\n        setControlsVisible(false);\n      }\n    }, 5000);\n    return () => {\n      if (controlsTimerRef.current) {\n        clearTimeout(controlsTimerRef.current);\n      }\n    };\n  }, [controlsVisible, isFullScreen, seekProgress, qualityDropDownOpen]);\n\n  const onSeekTo = useCallback(\n    seek => {\n      match({ isLandscape, isMobile, seek })\n        .with({ seek: -10, isMobile: false, isLandscape: false }, () => {\n          setHoverControlsVisible({ ...hoverControlsVisible, seekBackward: true });\n          setTimeout(() => {\n            setHoverControlsVisible({\n              ...hoverControlsVisible,\n              seekBackward: false,\n            });\n          }, 1000);\n        })\n        .with({ seek: 10, isMobile: false, isLandscape: false }, () => {\n          setHoverControlsVisible({ ...hoverControlsVisible, seekForward: true });\n          setTimeout(() => {\n            setHoverControlsVisible({\n              ...hoverControlsVisible,\n              seekForward: false,\n            });\n          }, 1000);\n        })\n        .otherwise(() => null);\n      hlsPlayer?.seekTo(videoRef.current?.currentTime + seek);\n    },\n    [hoverControlsVisible, isLandscape, isMobile],\n  );\n  const onDoubleClickHandler = useCallback(\n    event => {\n      if (!(isMobile || isLandscape) || hlsState?.variants[0]?.playlist_type !== HLSPlaylistType.DVR) {\n        return;\n      }\n      const sidePercentage = (event.screenX * 100) / event.target.clientWidth;\n      // there is space for pause/unpause button\n      if (sidePercentage < 45) {\n        setHoverControlsVisible({\n          ...hoverControlsVisible,\n          seekBackward: true,\n        });\n        onSeekTo(-10);\n      } else {\n        setHoverControlsVisible({\n          ...hoverControlsVisible,\n          seekForward: true,\n        });\n        onSeekTo(10);\n      }\n      setTimeout(() => {\n        setHoverControlsVisible({\n          ...hoverControlsVisible,\n          seekForward: false,\n          seekBackward: false,\n        });\n      }, 1000);\n    },\n    [hlsState?.variants, hoverControlsVisible, isLandscape, isMobile, onSeekTo],\n  );\n\n  const onClickHandler = useCallback(async () => {\n    match({ isMobile, isLandscape, playlist_type: hlsState?.variants[0]?.playlist_type })\n      .with({ playlist_type: HLSPlaylistType.DVR, isMobile: false, isLandscape: false }, async () => {\n        if (isPaused) {\n          await hlsPlayer?.play();\n        } else {\n          hlsPlayer?.pause();\n        }\n      })\n      .when(\n        ({ isMobile, isLandscape }) => isMobile || isLandscape,\n        () => {\n          setControlsVisible(value => !value);\n          if (controlsTimerRef.current) {\n            clearTimeout(controlsTimerRef.current);\n          }\n        },\n      )\n      .otherwise(() => null);\n  }, [hlsState?.variants, isLandscape, isMobile, isPaused]);\n\n  const onHoverHandler = useCallback(\n    event => {\n      event.preventDefault();\n      if (isMobile || isLandscape) {\n        return;\n      }\n      if (event.type === 'mouseenter' || qualityDropDownOpen) {\n        setControlsVisible(true);\n        return;\n      }\n      if (event.type === 'mouseleave' && !seekProgress) {\n        setControlsVisible(false);\n      } else if (!controlsVisible && event.type === 'mousemove') {\n        setControlsVisible(true);\n        if (controlsTimerRef.current) {\n          clearTimeout(controlsTimerRef.current);\n        }\n      }\n    },\n    [controlsVisible, isLandscape, isMobile, qualityDropDownOpen, seekProgress],\n  );\n\n  const keyHandler = useKeyboardHandler(isPaused, hlsPlayer);\n\n  if (!hlsUrl || streamEnded) {\n    return (\n      <>\n        <ToggleChat />\n        {hlsViewRef.current && (isMobile || isLandscape) && (\n          <Box css={{ position: 'fixed', left: '$4', top: '$4', zIndex: 11 }}>\n            <LeaveRoom screenType=\"hls_live_streaming\" container={hlsViewRef.current} />\n          </Box>\n        )}\n        <Flex\n          key=\"hls-viewer\"\n          id={`hls-viewer-${themeType}`}\n          ref={hlsViewRef}\n          direction={isMobile || isLandscape ? 'column' : 'row'}\n          justify=\"center\"\n          css={{\n            flex: isLandscape ? '2 1 0' : '1 1 0',\n          }}\n        >\n          {streamEnded ? (\n            <WaitingView\n              icon={<ColoredHandIcon height={56} width={56} />}\n              title=\"Stream has ended\"\n              subtitle=\"Have a nice day!\"\n            />\n          ) : (\n            <WaitingView\n              icon={<GoLiveIcon height={56} width={56} style={{ color: 'white' }} />}\n              title=\"Stream yet to start\"\n              subtitle=\"Sit back and relax\"\n            />\n          )}\n        </Flex>\n      </>\n    );\n  }\n  return (\n    <Flex\n      key=\"hls-viewer\"\n      id={`hls-viewer-${themeType}`}\n      ref={hlsViewRef}\n      direction={isMobile || isLandscape ? 'column' : 'row'}\n      justify=\"center\"\n      css={{\n        flex: isLandscape ? '2 1 0' : '1 1 0',\n        transition: 'all 0.3s ease-in-out',\n      }}\n    >\n      {hlsViewRef.current && (isMobile || isLandscape) && (\n        <Box css={{ position: 'fixed', left: '$4', top: '$4', zIndex: 11 }}>\n          <LeaveRoom screenType=\"hls_live_streaming\" container={hlsViewRef.current} />\n        </Box>\n      )}\n\n      <HMSPlayerContext.Provider value={{ hlsPlayer }}>\n        {hlsStatsState?.url && enablHlsStats && !(isMobile || isLandscape) ? (\n          <HlsStatsOverlay hlsStatsState={hlsStatsState} onClose={sfnOverlayClose} />\n        ) : null}\n        <Flex\n          id=\"hls-player-container\"\n          align=\"center\"\n          justify=\"center\"\n          css={{\n            size: '100%',\n            margin: '0 auto',\n            '@md': {\n              height: 'auto',\n            },\n            outline: 'none',\n          }}\n          onKeyDown={async event => {\n            if (hlsState?.variants[0]?.playlist_type === HLSPlaylistType.DVR) {\n              await keyHandler(event);\n            }\n          }}\n          tabIndex=\"0\"\n        >\n          {!(isMobile || isLandscape) && (\n            <HLSAutoplayBlockedPrompt open={isHlsAutoplayBlocked} unblockAutoPlay={unblockAutoPlay} />\n          )}\n          {showLoader && (\n            <Flex\n              align=\"center\"\n              justify=\"center\"\n              css={{\n                position: 'absolute',\n              }}\n            >\n              <Loading width={72} height={72} />\n            </Flex>\n          )}\n          <HMSVideoPlayer.Root\n            ref={videoRef}\n            onMouseEnter={onHoverHandler}\n            onMouseMove={onHoverHandler}\n            onMouseLeave={onHoverHandler}\n            onClick={onClickHandler}\n            isFullScreen={isFullScreen}\n            onDoubleClick={e => {\n              onDoubleClickHandler(e);\n            }}\n          >\n            <>\n              {!(isMobile || isLandscape) && (\n                <Flex\n                  align=\"center\"\n                  justify=\"between\"\n                  css={{\n                    position: 'absolute',\n                    bg: `${\n                      hoverControlsVisible.pausePlay ||\n                      hoverControlsVisible.seekBackward ||\n                      hoverControlsVisible.seekForward\n                        ? '#00000066'\n                        : ''\n                    }`,\n                    display: 'inline-flex',\n                    gap: '$2',\n                    zIndex: 1,\n                    size: '100%',\n                  }}\n                >\n                  {!showLoader && hlsState?.variants[0]?.playlist_type === HLSPlaylistType.DVR && (\n                    <HMSVideoPlayer.PlayPauseSeekControls.Overlay\n                      isPaused={isPaused}\n                      showControls={controlsVisible}\n                      hoverControlsVisible={hoverControlsVisible}\n                    />\n                  )}\n                </Flex>\n              )}\n              {isMobile || isLandscape ? (\n                <>\n                  {!showLoader && hlsState?.variants[0]?.playlist_type === HLSPlaylistType.DVR && (\n                    <HMSVideoPlayer.PlayPauseSeekControls.Overlay\n                      isPaused={isPaused}\n                      showControls={controlsVisible}\n                      hoverControlsVisible={hoverControlsVisible}\n                    />\n                  )}\n                  <Flex\n                    ref={controlsRef}\n                    direction=\"column\"\n                    justify=\"start\"\n                    align=\"start\"\n                    css={{\n                      position: 'absolute',\n                      top: '0',\n                      left: '0',\n                      width: '100%',\n                      flexShrink: 0,\n                      zIndex: 1,\n                      visibility: controlsVisible ? `` : `hidden`,\n                      opacity: controlsVisible ? `1` : '0',\n                    }}\n                  >\n                    <HMSVideoPlayer.Controls.Root\n                      css={{\n                        p: '$4 $8',\n                      }}\n                      onClick={e => e.stopPropagation()}\n                    >\n                      <HMSVideoPlayer.Controls.Right>\n                        {(isLandscape || (isMobile && isFullScreen)) && showChat && (\n                          <ChatToggle\n                            onClick={() => {\n                              if (isFullScreen) {\n                                toggle();\n                              }\n                              // toggle and closing fullscreen takes few ms, to make it synced we are calling settimeout\n                              setTimeout(() => {\n                                toggleChat();\n                              }, 0);\n                            }}\n                          />\n                        )}\n                        {hasCaptions && !isHlsAutoplayBlocked && <HLSCaptionSelector isEnabled={isCaptionEnabled} />}\n                        {hlsViewRef.current && availableLayers.length > 0 && !isHlsAutoplayBlocked ? (\n                          <HLSQualitySelector\n                            layers={availableLayers}\n                            onOpenChange={setQualityDropDownOpen}\n                            open={qualityDropDownOpen}\n                            selection={currentSelectedQuality}\n                            onQualityChange={handleQuality}\n                            isAuto={isUserSelectedAuto}\n                            containerRef={hlsViewRef.current}\n                          />\n                        ) : null}\n                        <HLSAutoplayBlockedPrompt open={isHlsAutoplayBlocked} unblockAutoPlay={unblockAutoPlay} />\n                      </HMSVideoPlayer.Controls.Right>\n                    </HMSVideoPlayer.Controls.Root>\n                  </Flex>\n                </>\n              ) : null}\n              {controlsVisible && (\n                <Flex\n                  ref={controlsRef}\n                  direction={isMobile ? 'columnReverse' : 'column'}\n                  justify=\"end\"\n                  align=\"start\"\n                  css={{\n                    position: 'absolute',\n                    bottom: isFullScreen && hlsState?.variants[0]?.playlist_type === HLSPlaylistType.DVR ? '$8' : '0',\n                    left: '0',\n                    zIndex: 1,\n                    background:\n                      isMobile || isLandscape\n                        ? ''\n                        : `linear-gradient(180deg, ${theme.colors.background_dim.value}00 29.46%, ${theme.colors.background_dim.value}A3 100%);`,\n                    width: '100%',\n                    pt: '$8',\n                    flexShrink: 0,\n                    transition: 'visibility 0s 0.5s, opacity 0.5s linear',\n                  }}\n                >\n                  {hlsState?.variants[0]?.playlist_type === HLSPlaylistType.DVR ? (\n                    <HMSVideoPlayer.Progress seekProgress={seekProgress} setSeekProgress={setSeekProgress} />\n                  ) : null}\n                  <HMSVideoPlayer.Controls.Root\n                    css={{\n                      p: '$4 $8',\n                    }}\n                    onClick={e => e.stopPropagation()}\n                  >\n                    <HMSVideoPlayer.Controls.Left>\n                      {!(isMobile || isLandscape) && (\n                        <>\n                          {hlsState?.variants[0]?.playlist_type === HLSPlaylistType.DVR ? (\n                            <>\n                              <HMSVideoPlayer.PlayPauseSeekControls.Button isPaused={isPaused} onSeekTo={onSeekTo} />\n                              {!isVideoLive ? <HMSVideoPlayer.Duration /> : null}\n                            </>\n                          ) : null}\n                          <HMSVideoPlayer.Volume />\n                        </>\n                      )}\n                      <IconButton\n                        css={{ px: '$2' }}\n                        onClick={async e => {\n                          e.stopPropagation();\n                          await hlsPlayer?.seekToLivePosition();\n                          setIsVideoLive(true);\n                        }}\n                        key=\"jump-to-live_btn\"\n                        data-testid=\"jump-to-live_btn\"\n                      >\n                        <Tooltip title={isVideoLive ? 'Live' : 'Go to Live'} side=\"top\">\n                          <Flex justify=\"center\" gap={2} align=\"center\">\n                            <Box\n                              css={{\n                                height: '$4',\n                                width: '$4',\n                                background: isVideoLive ? '$alert_error_default' : '$on_primary_medium',\n                                r: '$1',\n                              }}\n                            />\n                            <Text\n                              variant=\"$body1\"\n                              css={{\n                                c: isVideoLive ? '$on_surface_high' : '$on_surface_medium',\n                                fontWeight: '$semiBold',\n                              }}\n                            >\n                              {isVideoLive ? 'LIVE' : 'GO LIVE'}\n                            </Text>\n                          </Flex>\n                        </Tooltip>\n                      </IconButton>\n                      {(isMobile || isLandscape) &&\n                      !isVideoLive &&\n                      hlsState?.variants[0]?.playlist_type === HLSPlaylistType.DVR ? (\n                        <HMSVideoPlayer.Duration />\n                      ) : null}\n                    </HMSVideoPlayer.Controls.Left>\n\n                    <HMSVideoPlayer.Controls.Right>\n                      {hasCaptions && !(isMobile || isLandscape) && <HLSCaptionSelector isEnabled={isCaptionEnabled} />}\n                      {availableLayers.length > 0 && !(isMobile || isLandscape) ? (\n                        <HLSQualitySelector\n                          layers={availableLayers}\n                          onOpenChange={setQualityDropDownOpen}\n                          open={qualityDropDownOpen}\n                          selection={currentSelectedQuality}\n                          onQualityChange={handleQuality}\n                          isAuto={isUserSelectedAuto}\n                          containerRef={hlsViewRef.current}\n                        />\n                      ) : null}\n                      {isFullScreenSupported ? (\n                        <FullScreenButton isFullScreen={isFullScreen} onToggle={toggle} />\n                      ) : null}\n                    </HMSVideoPlayer.Controls.Right>\n                  </HMSVideoPlayer.Controls.Root>\n                </Flex>\n              )}\n            </>\n          </HMSVideoPlayer.Root>\n        </Flex>\n      </HMSPlayerContext.Provider>\n      <ToggleChat isFullScreen={isFullScreen} />\n      {isMobile && !isFullScreen && <HLSViewTitle />}\n    </Flex>\n  );\n};\n\nexport default HLSView;\n","// @ts-ignore\nimport { LeftControls, RightControls, VideoControls } from './Controls';\n// @ts-ignore\nimport { HMSVideo } from './HMSVideo';\nimport { PlayPauseSeekControls, PlayPauseSeekOverlayControls } from './PlayPauseSeekControls';\nimport { VideoProgress } from './VideoProgress';\nimport { VideoTime } from './VideoTime';\nimport { VolumeControl } from './VolumeControl';\n\nexport const HMSVideoPlayer = {\n  Root: HMSVideo,\n  Progress: VideoProgress,\n  Duration: VideoTime,\n  Volume: VolumeControl,\n  Controls: {\n    Root: VideoControls,\n    Left: LeftControls,\n    Right: RightControls,\n  },\n  PlayPauseSeekControls: {\n    Overlay: PlayPauseSeekOverlayControls,\n    Button: PlayPauseSeekControls,\n  },\n};\n","import { Flex, styled } from '../../..';\n\nexport const VideoControls = styled(Flex, {\n  justifyContent: 'center',\n  alignItems: 'center',\n  alignSelf: 'stretch',\n  width: '100%',\n  gap: '$2',\n});\n\nexport const LeftControls = styled(Flex, {\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  width: '100%',\n  gap: '$4',\n});\nexport const RightControls = styled(Flex, {\n  justifyContent: 'flex-end',\n  alignItems: 'center',\n  width: '100%',\n  gap: '$4',\n});\n","import React, { forwardRef, useEffect, useState } from 'react';\nimport { Flex } from '../../../Layout';\n\nexport const HMSVideo = forwardRef(({ children, ...props }, videoRef) => {\n  const [width, setWidth] = useState('auto');\n\n  useEffect(() => {\n    const updatingVideoWidth = () => {\n      const videoEl = videoRef.current;\n      if (!videoEl) {\n        return;\n      }\n      if (videoEl.videoWidth > videoEl.videoHeight && width !== '100%') {\n        setWidth('100%');\n      }\n    };\n    const videoEl = videoRef.current;\n    if (!videoEl) {\n      return;\n    }\n    videoEl.addEventListener('loadedmetadata', updatingVideoWidth);\n    return () => {\n      videoEl.removeEventListener('loadedmetadata', updatingVideoWidth);\n    };\n  }, []);\n  return (\n    <Flex\n      data-testid=\"hms-video\"\n      css={{\n        size: '100%',\n        position: 'relative',\n        justifyContent: 'center',\n        transition: 'all 0.3s ease-in-out',\n        '@md': {\n          '& video': {\n            height: props.isFullScreen ? '' : '$60 !important',\n          },\n        },\n        '& video::cue': {\n          // default for on-surface-high\n          color: '#EFF0FA',\n          whiteSpace: 'pre-line',\n          fontSize: '$sm',\n          fontStyle: 'normal',\n          fontWeight: '$regular',\n          lineHeight: '$sm',\n          letterSpacing: '0.25px',\n        },\n        '& video::-webkit-media-text-track-display': {\n          padding: '0 $4',\n          boxShadow: '0px 1px 3px 0px #000000A3',\n        },\n        '& video::-webkit-media-text-track-container': {\n          fontSize: '$space$10 !important',\n        },\n      }}\n      direction=\"column\"\n      {...props}\n    >\n      <video\n        style={{\n          margin: '0 auto',\n          objectFit: 'contain',\n          width: width,\n          height: '100%',\n          maxWidth: '100%',\n        }}\n        ref={videoRef}\n        playsInline\n        disablePictureInPicture\n      />\n      {children}\n    </Flex>\n  );\n});\n","import React from 'react';\nimport { useMedia } from 'react-use';\nimport { BackwardArrowIcon, ForwardArrowIcon } from '@100mslive/react-icons';\nimport { Box, Flex } from '../../../Layout';\nimport { Text } from '../../../Text';\nimport { config } from '../../../Theme';\nimport { PlayPauseButton } from './PlayPauseButton';\nimport { SeekControl } from './SeekControl';\nimport { useIsLandscape } from '../../common/hooks';\n\n// desktop buttons\nexport const PlayPauseSeekControls = ({\n  isPaused,\n  onSeekTo,\n}: {\n  isPaused: boolean;\n  onSeekTo: (value: number) => void;\n}) => {\n  return (\n    <>\n      <SeekControl\n        onClick={e => {\n          e.stopPropagation();\n          onSeekTo(-10);\n        }}\n        title=\"backward\"\n      >\n        <BackwardArrowIcon width={20} height={20} />\n      </SeekControl>\n      <PlayPauseButton isPaused={isPaused} />\n      <SeekControl\n        onClick={e => {\n          e.stopPropagation();\n          onSeekTo(10);\n        }}\n        title=\"forward\"\n      >\n        <ForwardArrowIcon width={20} height={20} />\n      </SeekControl>\n    </>\n  );\n};\n\n// overlay handlers\nexport const PlayPauseSeekOverlayControls = ({\n  isPaused,\n  showControls,\n  hoverControlsVisible,\n}: {\n  isPaused: boolean;\n  showControls: boolean;\n  hoverControlsVisible: {\n    seekBackward: boolean;\n    seekForward: boolean;\n    pausePlay: boolean;\n  };\n}) => {\n  const isMobile = useMedia(config.media.md);\n  const isLandscape = useIsLandscape();\n\n  if (!isMobile && !isLandscape) {\n    // show desktopOverflow icons\n    return (\n      <>\n        <Flex\n          css={{\n            bg: 'rgba(0, 0, 0, 0.6)',\n            r: '$round',\n            size: '$24',\n            visibility: hoverControlsVisible.seekBackward ? `` : `hidden`,\n            opacity: hoverControlsVisible.seekBackward ? `1` : '0',\n          }}\n          direction=\"column\"\n          align=\"center\"\n        >\n          <SeekControl title=\"backward\">\n            <BackwardArrowIcon width={52} height={52} />\n          </SeekControl>\n          <Text variant=\"body2\" css={{ fontWeight: '$regular' }}>\n            10 secs\n          </Text>\n        </Flex>\n        <Box\n          css={{\n            bg: 'rgba(0, 0, 0, 0.6)',\n            r: '$round',\n            visibility: hoverControlsVisible.pausePlay ? `` : `hidden`,\n            opacity: hoverControlsVisible.pausePlay ? `1` : '0',\n          }}\n        >\n          <PlayPauseButton isPaused={isPaused} width={48} height={48} />\n        </Box>\n        <Flex\n          css={{\n            bg: 'rgba(0, 0, 0, 0.6)',\n            r: '$round',\n            size: '$24',\n            visibility: hoverControlsVisible.seekForward ? `` : `hidden`,\n            opacity: hoverControlsVisible.seekForward ? `1` : '0',\n          }}\n          direction=\"column\"\n          align=\"center\"\n        >\n          <SeekControl title=\"forward\">\n            <ForwardArrowIcon width={52} height={52} />\n          </SeekControl>\n          <Text variant=\"body2\" css={{ fontWeight: '$regular' }}>\n            10 secs\n          </Text>\n        </Flex>\n      </>\n    );\n  }\n\n  return (\n    <Flex\n      align=\"center\"\n      justify=\"center\"\n      css={{\n        position: 'absolute',\n        bg: '#00000066',\n        display: 'inline-flex',\n        gap: '$2',\n        zIndex: 1,\n        size: '100%',\n        visibility: showControls ? `` : `hidden`,\n        opacity: showControls ? `1` : '0',\n      }}\n    >\n      <SeekControl\n        title=\"backward\"\n        css={{\n          visibility: hoverControlsVisible.seekBackward ? `` : `hidden`,\n          opacity: hoverControlsVisible.seekBackward ? `1` : '0',\n        }}\n      >\n        <BackwardArrowIcon width={32} height={32} />\n      </SeekControl>\n      <Box\n        css={{\n          bg: 'rgba(0, 0, 0, 0.6)',\n          r: '$round',\n        }}\n      >\n        <PlayPauseButton isPaused={isPaused} width={48} height={48} />\n      </Box>\n      <SeekControl\n        title=\"forward\"\n        css={{\n          visibility: hoverControlsVisible.seekForward ? `` : `hidden`,\n          opacity: hoverControlsVisible.seekForward ? `1` : '0',\n        }}\n      >\n        <ForwardArrowIcon width={32} height={32} />\n      </SeekControl>\n    </Flex>\n  );\n};\n","import React, { MouseEvent } from 'react';\nimport { PauseIcon, PlayIcon } from '@100mslive/react-icons';\nimport { IconButton, Tooltip } from '../../..';\nimport { useHMSPlayerContext } from './PlayerContext';\n\nexport const PlayPauseButton = ({\n  isPaused,\n  width = 20,\n  height = 20,\n}: {\n  isPaused: boolean;\n  width?: number;\n  height?: number;\n}) => {\n  const { hlsPlayer } = useHMSPlayerContext();\n  const onClick = async (event: MouseEvent) => {\n    event?.stopPropagation();\n    isPaused ? await hlsPlayer?.play() : hlsPlayer?.pause();\n  };\n  return (\n    <Tooltip title={isPaused ? 'Play' : 'Pause'} side=\"top\">\n      <IconButton onClick={onClick} data-testid=\"play_pause_btn\">\n        {isPaused ? <PlayIcon width={width} height={height} /> : <PauseIcon width={width} height={height} />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n","import React, { useContext } from 'react';\nimport { HMSHLSPlayer } from '@100mslive/hls-player';\n\ntype IHMSPlayerContext = {\n  hlsPlayer?: HMSHLSPlayer;\n};\n\nexport const HMSPlayerContext = React.createContext<IHMSPlayerContext>({\n  hlsPlayer: undefined,\n});\n\nexport const useHMSPlayerContext = () => {\n  const context = useContext(HMSPlayerContext);\n  return context;\n};\n","import React, { MouseEventHandler } from 'react';\nimport { IconButton, Tooltip } from '../../..';\n\nexport const SeekControl = ({\n  title,\n  onClick,\n  children,\n  css,\n}: {\n  title: string;\n  onClick?: MouseEventHandler<HTMLButtonElement>;\n  css?: any;\n  children: React.ReactNode;\n}) => {\n  return (\n    <Tooltip title={title} side=\"top\">\n      <IconButton onClick={onClick} data-testid=\"backward_forward_arrow_btn\" css={css}>\n        {children}\n      </IconButton>\n    </Tooltip>\n  );\n};\n","export function getPercentage(a: number, b: number) {\n  return (a / b) * 100;\n}\n\n/**\n * Take a time in seconds and return its equivalent time in hh:mm:ss format\n * @param {number} timeInSeconds if given as floating point value, it is floored.\n *\n * @returns a string representing timeInSeconds in HH:MM:SS format.\n */\nexport function getDurationFromSeconds(timeInSeconds: number) {\n  let time = Math.floor(timeInSeconds);\n  const hours = Math.floor(time / 3600);\n  time = time - hours * 3600;\n  const minutes = Math.floor(time / 60);\n  const seconds = Math.floor(time - minutes * 60);\n\n  const prefixedMinutes = `${minutes < 10 ? `0${minutes}` : minutes}`;\n  const prefixedSeconds = `${seconds < 10 ? `0${seconds}` : seconds}`;\n\n  let videoTimeStr = `${prefixedMinutes}:${prefixedSeconds}`;\n  if (hours) {\n    const prefixedHours = `${hours < 10 ? `0${hours}` : hours}`;\n    videoTimeStr = `${prefixedHours}:${prefixedMinutes}:${prefixedSeconds}`;\n  }\n  return videoTimeStr;\n}\n\nexport function getDuration(videoEl: HTMLVideoElement): number {\n  if (isFinite(videoEl.duration)) {\n    return videoEl.duration;\n  }\n  if (videoEl.seekable.length > 0) {\n    return videoEl.seekable.end(0);\n  }\n  return 0;\n}\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Box, Flex, Slider } from '../../..';\nimport { useHMSPlayerContext } from './PlayerContext';\nimport { getDuration, getPercentage } from './utils';\n\nexport const VideoProgress = ({\n  seekProgress,\n  setSeekProgress,\n}: {\n  seekProgress: boolean;\n  setSeekProgress: (value: boolean) => void;\n}) => {\n  const { hlsPlayer } = useHMSPlayerContext();\n  const [videoProgress, setVideoProgress] = useState<number>(0);\n  const [bufferProgress, setBufferProgress] = useState(0);\n  const videoEl = hlsPlayer?.getVideoElement();\n\n  const setProgress = useCallback(() => {\n    if (!videoEl) {\n      return;\n    }\n    const duration = getDuration(videoEl);\n    const videoProgress = Math.floor(getPercentage(videoEl.currentTime, duration));\n    let bufferProgress = 0;\n    if (videoEl.buffered.length > 0) {\n      bufferProgress = Math.floor(getPercentage(videoEl.buffered?.end(0), duration));\n    }\n    if (!isNaN(videoProgress)) {\n      setVideoProgress(videoProgress);\n    }\n    if (!isNaN(bufferProgress)) {\n      setBufferProgress(bufferProgress);\n    }\n  }, [videoEl]);\n  const timeupdateHandler = useCallback(() => {\n    if (!videoEl || seekProgress) {\n      return;\n    }\n    setProgress();\n  }, [seekProgress, setProgress, videoEl]);\n  useEffect(() => {\n    if (!videoEl) {\n      return;\n    }\n    setProgress();\n    videoEl.addEventListener('timeupdate', timeupdateHandler);\n    return function cleanup() {\n      videoEl?.removeEventListener('timeupdate', timeupdateHandler);\n    };\n  }, [setProgress, timeupdateHandler, videoEl]);\n\n  const onProgress = (progress: number[]) => {\n    const progress1 = Math.floor(getPercentage(progress[0], 100));\n    const videoEl = hlsPlayer?.getVideoElement();\n    if (!videoEl) {\n      return;\n    }\n    const duration = isFinite(videoEl.duration) ? videoEl.duration : videoEl.seekable?.end(0) || 0;\n    const currentTime = (progress1 * duration) / 100;\n    hlsPlayer?.seekTo(currentTime);\n    setProgress();\n  };\n\n  if (!videoEl) {\n    return null;\n  }\n  return (\n    <Flex align=\"center\" css={{ cursor: 'pointer', h: '$2', alignSelf: 'stretch' }}>\n      <Slider\n        id=\"video-actual-rest\"\n        css={{\n          cursor: 'pointer',\n          h: '$2',\n          zIndex: 1,\n          transition: `all .2s ease .5s`,\n        }}\n        min={0}\n        max={100}\n        step={1}\n        value={[videoProgress]}\n        showTooltip={false}\n        onValueChange={onProgress}\n        onPointerDown={() => setSeekProgress(true)}\n        onPointerUp={() => setSeekProgress(false)}\n        thumbStyles={{ w: '$6', h: '$6' }}\n      />\n      <Box\n        id=\"video-buffer\"\n        css={{\n          h: '$2',\n          width: `${bufferProgress - videoProgress}%`,\n          background: '$on_surface_high',\n          position: 'absolute',\n          left: `${videoProgress}%`,\n          opacity: '25%',\n        }}\n      />\n    </Flex>\n  );\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { HMSHLSPlayerEvents } from '@100mslive/hls-player';\nimport { Text } from '../../../Text';\nimport { useHMSPlayerContext } from './PlayerContext';\nimport { getDuration, getDurationFromSeconds } from './utils';\n\nexport const VideoTime = () => {\n  const { hlsPlayer } = useHMSPlayerContext();\n\n  const [videoTime, setVideoTime] = useState(getDurationFromSeconds(0));\n\n  const updateTime = useCallback(\n    (currentTime: number) => {\n      const videoEl = hlsPlayer?.getVideoElement();\n      if (videoEl) {\n        const duration = getDuration(videoEl);\n        setVideoTime(getDurationFromSeconds(duration - currentTime));\n      } else {\n        setVideoTime(getDurationFromSeconds(currentTime));\n      }\n    },\n    [hlsPlayer],\n  );\n  useEffect(() => {\n    const timeupdateHandler = (currentTime: number) => {\n      updateTime(currentTime);\n    };\n    if (hlsPlayer) {\n      hlsPlayer.on(HMSHLSPlayerEvents.CURRENT_TIME, timeupdateHandler);\n      const videoEl = hlsPlayer?.getVideoElement();\n      updateTime(videoEl.currentTime);\n    }\n    return function cleanup() {\n      hlsPlayer?.off(HMSHLSPlayerEvents.CURRENT_TIME, timeupdateHandler);\n    };\n  }, [hlsPlayer, updateTime]);\n\n  return hlsPlayer ? (\n    <Text\n      variant=\"body1\"\n      css={{\n        minWidth: '$16',\n        c: '$on_surface_medium',\n        display: 'flex',\n        justifyContent: 'center',\n        fontWeight: '$regular',\n      }}\n    >\n      -{videoTime}\n    </Text>\n  ) : null;\n};\n","import React, { useState } from 'react';\nimport { VolumeOneIcon, VolumeTwoIcon, VolumeZeroIcon } from '@100mslive/react-icons';\nimport { Flex, Slider } from '../../..';\nimport { useHMSPlayerContext } from './PlayerContext';\n\nexport const VolumeControl = () => {\n  const { hlsPlayer } = useHMSPlayerContext();\n  const [volume, setVolume] = useState(hlsPlayer?.volume ?? 100);\n  const [showSlider, setShowSlider] = useState(false);\n\n  return (\n    <Flex\n      align=\"center\"\n      css={{ color: '$on_surface_high' }}\n      onMouseOver={event => {\n        event.stopPropagation();\n        setShowSlider(true);\n      }}\n      onMouseLeave={event => {\n        event.stopPropagation();\n        setShowSlider(false);\n      }}\n    >\n      <VolumeIcon\n        volume={volume}\n        onClick={() => {\n          if (volume > 0) {\n            setVolume(0);\n            hlsPlayer?.setVolume(0);\n          } else {\n            setVolume(100);\n            hlsPlayer?.setVolume(100);\n          }\n        }}\n      />\n      <Slider\n        css={{\n          mx: '$4',\n          w: '$20',\n          cursor: 'pointer',\n          '@sm': { w: '$14' },\n          '@xs': { w: '$14' },\n          opacity: showSlider ? '1' : '0',\n          display: showSlider ? '' : 'none',\n          transition: `all .2s ease .5s`,\n        }}\n        min={0}\n        max={100}\n        step={1}\n        value={[volume]}\n        onValueChange={volume => {\n          hlsPlayer?.setVolume(volume[0]);\n          setVolume(volume[0]);\n        }}\n        thumbStyles={{ w: '$6', h: '$6' }}\n      />\n    </Flex>\n  );\n};\n\nconst VolumeIcon = ({ volume, onClick }: { volume: number; onClick: () => void }) => {\n  if (volume === 0) {\n    return <VolumeZeroIcon style={{ cursor: 'pointer', transition: 'color 0.3s' }} onClick={onClick} />;\n  }\n  return volume < 50 ? (\n    <VolumeOneIcon style={{ cursor: 'pointer', transition: 'color 0.3s' }} onClick={onClick} />\n  ) : (\n    <VolumeTwoIcon style={{ cursor: 'pointer', transition: 'color 0.3s' }} onClick={onClick} />\n  );\n};\n","import React from 'react';\nimport { ExpandIcon, ShrinkIcon } from '@100mslive/react-icons';\nimport { Flex, IconButton, Tooltip } from '../../..';\n\nexport const FullScreenButton = ({ isFullScreen, onToggle }: { isFullScreen: boolean; onToggle: () => void }) => {\n  return (\n    <Tooltip title={`${isFullScreen ? 'Exit' : 'Go'} fullscreen`} side=\"top\">\n      <IconButton css={{ margin: '0px' }} onClick={onToggle} key=\"fullscreen_btn\" data-testid=\"fullscreen_btn\">\n        <Flex>{isFullScreen ? <ShrinkIcon /> : <ExpandIcon />}</Flex>\n      </IconButton>\n    </Tooltip>\n  );\n};\n","import React from 'react';\nimport { useMedia } from 'react-use';\nimport { VolumeTwoIcon } from '@100mslive/react-icons';\nimport { Button, config, Dialog, IconButton, Text } from '../../..';\n// @ts-ignore\nimport { DialogContent, DialogRow } from '../../primitives/DialogContent';\nimport { useIsLandscape } from '../../common/hooks';\n\nexport function HLSAutoplayBlockedPrompt({\n  open,\n  unblockAutoPlay,\n}: {\n  open: boolean;\n  unblockAutoPlay: () => Promise<void>;\n}) {\n  const isLandscape = useIsLandscape();\n  const isMobile = useMedia(config.media.md);\n  if ((isMobile || isLandscape) && open) {\n    return (\n      <IconButton\n        css={{\n          border: '1px solid white',\n          bg: 'white',\n          color: '#000',\n          r: '$2',\n        }}\n        onClick={async () => await unblockAutoPlay()}\n      >\n        <VolumeTwoIcon width=\"32\" height=\"32\" />\n        <Text\n          variant=\"body1\"\n          css={{\n            fontWeight: '$semiBold',\n            px: '$2',\n            color: '#000',\n          }}\n        >\n          Tap To Unmute\n        </Text>\n      </IconButton>\n    );\n  }\n  return (\n    <Dialog.Root\n      open={open}\n      onOpenChange={async value => {\n        if (!value) {\n          await unblockAutoPlay();\n        }\n      }}\n    >\n      <DialogContent title=\"Attention\" closeable={false}>\n        <DialogRow>\n          <Text variant=\"md\">\n            The browser wants us to get a confirmation for playing the HLS Stream. Please click \"play stream\" to\n            proceed.\n          </Text>\n        </DialogRow>\n        <DialogRow justify=\"end\">\n          <Button\n            variant=\"primary\"\n            onClick={async () => {\n              await unblockAutoPlay();\n            }}\n          >\n            Play stream\n          </Button>\n        </DialogRow>\n      </DialogContent>\n    </Dialog.Root>\n  );\n}\n","import React from 'react';\nimport { ClosedCaptionIcon, OpenCaptionIcon } from '@100mslive/react-icons';\nimport { IconButton, Tooltip } from '../../../';\nimport { useHMSPlayerContext } from './PlayerContext';\n\nexport function HLSCaptionSelector({ isEnabled }: { isEnabled: boolean }) {\n  const { hlsPlayer } = useHMSPlayerContext();\n  return (\n    <Tooltip title=\"Subtitles/closed captions\" side=\"top\">\n      <IconButton css={{ p: '$2' }} onClick={() => hlsPlayer?.toggleCaption()}>\n        {isEnabled ? <ClosedCaptionIcon width=\"20\" height=\"20px\" /> : <OpenCaptionIcon width=\"20\" height=\"20px\" />}\n      </IconButton>\n    </Tooltip>\n  );\n}\n","import React from 'react';\nimport { useMedia } from 'react-use';\nimport { HMSHLSLayer } from '@100mslive/hls-player';\nimport { CheckIcon, CrossIcon, SettingsIcon } from '@100mslive/react-icons';\nimport { Box, Dropdown, Flex, Text, Tooltip } from '../../..';\nimport { Sheet } from '../../../Sheet';\nimport { config } from '../../../Theme';\nimport { useIsLandscape } from '../../common/hooks';\n\nexport function HLSQualitySelector({\n  open,\n  onOpenChange,\n  layers,\n  onQualityChange,\n  selection,\n  isAuto,\n  containerRef,\n}: {\n  open: boolean;\n  onOpenChange: (value: boolean) => void;\n  layers: HMSHLSLayer[];\n  onQualityChange: (quality: { [key: string]: string | number } | HMSHLSLayer) => void;\n  selection: HMSHLSLayer;\n  isAuto: boolean;\n  containerRef?: HTMLDivElement;\n}) {\n  const isMobile = useMedia(config.media.md);\n  const isLandscape = useIsLandscape();\n\n  if (layers.length === 0) {\n    return null;\n  }\n  if (isMobile || isLandscape) {\n    return (\n      <Sheet.Root open={open} onOpenChange={onOpenChange}>\n        <Sheet.Trigger asChild data-testid=\"quality_selector\">\n          <Flex\n            css={{\n              color: '$on_primary_high',\n              r: '$1',\n              cursor: 'pointer',\n              p: '$2',\n            }}\n          >\n            <SettingsIcon />\n          </Flex>\n        </Sheet.Trigger>\n        <Sheet.Content\n          container={containerRef}\n          css={{ bg: '$surface_default', pb: '$1' }}\n          onClick={() => onOpenChange(false)}\n        >\n          <Sheet.Title\n            css={{\n              display: 'flex',\n              color: '$on_surface_high',\n              w: '100%',\n              justifyContent: 'space-between',\n              mt: '$8',\n              fontSize: '$md',\n              px: '$10',\n              pb: '$8',\n              borderBottom: '1px solid $border_bright',\n              alignItems: 'center',\n            }}\n          >\n            Quality\n            <Sheet.Close css={{ color: '$on_surface_high' }} onClick={() => onOpenChange(false)}>\n              <CrossIcon />\n            </Sheet.Close>\n          </Sheet.Title>\n          {layers.map(layer => {\n            return (\n              <Flex\n                align=\"center\"\n                css={{\n                  w: '100%',\n                  bg: '$surface_default',\n                  '&:hover': {\n                    bg: '$surface_brighter',\n                  },\n                  cursor: 'pointer',\n                  gap: '$4',\n                  py: '$8',\n                  px: '$10',\n                }}\n                key={layer.width}\n                onClick={() => onQualityChange(layer)}\n              >\n                <Text variant=\"caption\" css={{ fontWeight: '$semiBold' }}>\n                  {getQualityText(layer)}\n                </Text>\n                <Text variant=\"caption\" css={{ flex: '1 1 0', c: '$on_surface_low', pl: '$2' }}>\n                  {getBitrateText(layer)}\n                </Text>\n                {!isAuto && layer.width === selection?.width && layer.height === selection?.height && (\n                  <CheckIcon width=\"16px\" height=\"16px\" />\n                )}\n              </Flex>\n            );\n          })}\n          <Flex\n            align=\"center\"\n            css={{\n              w: '100%',\n              bg: '$surface_default',\n              '&:hover': {\n                bg: '$surface_brighter',\n              },\n              cursor: 'pointer',\n              gap: '$4',\n              py: '$8',\n              px: '$10',\n            }}\n            key=\"auto\"\n            onClick={() => onQualityChange({ height: 'auto' })}\n          >\n            <Text variant=\"caption\" css={{ fontWeight: '$semiBold', flex: '1 1 0' }}>\n              Auto\n            </Text>\n            {isAuto && <CheckIcon width=\"16px\" height=\"16px\" />}\n          </Flex>\n        </Sheet.Content>\n      </Sheet.Root>\n    );\n  }\n  return (\n    <Dropdown.Root open={open} onOpenChange={value => onOpenChange(value)} modal={false}>\n      <Dropdown.Trigger asChild data-testid=\"quality_selector\">\n        <Flex\n          css={{\n            color: '$on_primary_high',\n            r: '$1',\n            cursor: 'pointer',\n            p: '$2',\n          }}\n        >\n          <Tooltip title=\"Select Quality\" side=\"top\">\n            <Flex align=\"center\">\n              <Box\n                css={{\n                  w: '$9',\n                  h: '$9',\n                  display: 'inline-flex',\n                  alignItems: 'center',\n                  c: '$on_surface_high',\n                }}\n              >\n                <SettingsIcon />\n              </Box>\n              <Text\n                variant={{\n                  '@md': 'sm',\n                  '@sm': 'xs',\n                  '@xs': 'tiny',\n                }}\n                css={{ display: 'flex', alignItems: 'center', ml: '$2', c: '$on_surface_medium' }}\n              >\n                {isAuto && (\n                  <>\n                    Auto\n                    <Box\n                      css={{\n                        mx: '$2',\n                        w: '$2',\n                        h: '$2',\n                        background: '$on_surface_medium',\n                        r: '$1',\n                      }}\n                    />\n                  </>\n                )}\n                {selection && Math.min(selection.width || 0, selection.height || 0)}p\n              </Text>\n            </Flex>\n          </Tooltip>\n        </Flex>\n      </Dropdown.Trigger>\n      <Dropdown.Portal container={containerRef}>\n        <Dropdown.Content\n          sideOffset={5}\n          align=\"end\"\n          css={{\n            height: 'auto',\n            maxHeight: '$52',\n            w: '$40',\n            bg: '$surface_bright',\n            py: '$4',\n            gap: '$4',\n            display: 'grid',\n          }}\n        >\n          {layers.map(layer => {\n            return (\n              <Dropdown.Item\n                onClick={() => onQualityChange(layer)}\n                key={layer.width}\n                css={{\n                  bg:\n                    !isAuto && layer.width === selection?.width && layer.height === selection?.height\n                      ? '$surface_default'\n                      : '$surface_bright',\n                  '&:hover': {\n                    bg: '$surface_brighter',\n                  },\n                  p: '$2 $4 $2 $8',\n                  h: '$12',\n                  gap: '$2',\n                }}\n              >\n                <Text variant=\"caption\" css={{ fontWeight: '$semiBold' }}>\n                  {getQualityText(layer)}\n                </Text>\n                <Text variant=\"caption\" css={{ flex: '1 1 0', c: '$on_surface_low', pl: '$2' }}>\n                  {getBitrateText(layer)}\n                </Text>\n                {!isAuto && layer.width === selection?.width && layer.height === selection?.height && (\n                  <CheckIcon width=\"16px\" height=\"16px\" />\n                )}\n              </Dropdown.Item>\n            );\n          })}\n          <Dropdown.Item\n            onClick={() => onQualityChange({ height: 'auto' })}\n            key=\"auto\"\n            css={{\n              bg: !isAuto ? '$surface_bright' : '$surface_default',\n              '&:hover': {\n                bg: '$surface_brighter',\n              },\n              p: '$2 $4 $2 $8',\n              h: '$12',\n              gap: '$2',\n            }}\n          >\n            <Text variant=\"caption\" css={{ fontWeight: '$semiBold', flex: '1 1 0' }}>\n              Auto\n            </Text>\n            {isAuto && <CheckIcon width=\"16px\" height=\"16px\" />}\n          </Dropdown.Item>\n        </Dropdown.Content>\n      </Dropdown.Portal>\n    </Dropdown.Root>\n  );\n}\n\nconst getQualityText = (layer: HMSHLSLayer) => `${Math.min(layer.height || 0, layer.width || 0)}p `;\nconst getBitrateText = (layer: HMSHLSLayer) => `(${(Number(layer.bitrate / 1000) / 1000).toFixed(2)} Mbps)`;\n","import React from 'react';\nimport { ChevronDownIcon } from '@100mslive/react-icons';\nimport { Flex } from '../../../Layout';\nimport { Text } from '../../../Text';\n// @ts-ignore: No implicit any\nimport { Logo } from '../Header/HeaderComponents';\nimport { RoomDetailsRow } from '../RoomDetails/RoomDetailsRow';\nimport { useRoomLayoutHeader } from '../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen';\n// @ts-ignore\nimport { useIsSidepaneTypeOpen, useSidepaneToggle } from '../AppData/useSidepane';\nimport { SIDE_PANE_OPTIONS } from '../../common/constants';\n\n/*\n\tplayer handler --> left -> go live with timer or live, right -> expand icon \n\tinbetween -> play pause icon, double tap to go back/forward\n\tseekbar\n\thalf page will have chat or participant view\n*/\nexport const HLSViewTitle = () => {\n  const { title, details, description } = useRoomLayoutHeader();\n  const toggleDetailsPane = useSidepaneToggle(SIDE_PANE_OPTIONS.ROOM_DETAILS);\n  const isDetailSidepaneOpen = useIsSidepaneTypeOpen(SIDE_PANE_OPTIONS.ROOM_DETAILS);\n\n  if (isDetailSidepaneOpen) {\n    return (\n      <Flex\n        gap=\"4\"\n        align=\"center\"\n        justify=\"between\"\n        css={{\n          position: 'relative',\n          h: 'fit-content',\n          w: '100%',\n          borderBottom: '1px solid $border_bright',\n          p: '$8',\n          backgroundColor: '$surface_dim',\n        }}\n      >\n        <Text variant=\"sub2\" css={{ fontWeight: '$semiBold' }}>\n          About Session\n        </Text>\n        <Flex\n          onClick={toggleDetailsPane}\n          css={{\n            color: '$on_surface_high',\n            cursor: 'pointer',\n            '&:hover': { opacity: '0.8' },\n          }}\n        >\n          <ChevronDownIcon />\n        </Flex>\n      </Flex>\n    );\n  }\n  return (\n    <Flex\n      gap=\"4\"\n      align=\"center\"\n      css={{\n        position: 'relative',\n        h: 'fit-content',\n        w: '100%',\n        borderBottom: '1px solid $border_bright',\n        p: '$8',\n        backgroundColor: '$surface_dim',\n      }}\n    >\n      <Logo />\n      <Flex direction=\"column\">\n        {title ? (\n          <Text variant=\"sub2\" css={{ fontWeight: '$semiBold' }}>\n            {title}\n          </Text>\n        ) : null}\n        <Flex>\n          <RoomDetailsRow details={details} />\n          {description ? (\n            <Text variant=\"caption\" css={{ color: '$on_surface_medium' }} onClick={toggleDetailsPane}>\n              &nbsp;...more\n            </Text>\n          ) : null}\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n};\n"],"names":["toggleReducer","state","nextValue","initialValue","useReducer","t","e","Object","assign","width","height","viewBox","fill","xmlns","clipPath","d","id","x1","y1","x2","y2","gradientUnits","stopColor","offset","l","fillRule","clipRule","HlsStatsOverlay","_ref","hlsStatsState","onClose","_a","_b","_c","React","Flex","css","position","marginLeft","padding","zIndex","backgroundColor","borderRadius","direction","IconButton_default","top","right","onClick","CrossIcon","HlsStatsRow","label","align","style","cursor","textDecoration","href","url","target","rel","concat","videoSize","bufferedDuration","toFixed","bandwidthEstimate","bitrate","timeInSeconds","time","Math","floor","hours","minutes","seconds","prefixedMinutes","prefixedSeconds","videoTimeStr","prefixedHours","getDurationFromSeconds","distanceFromLive","droppedFrames","init_define_process_env","memo","_ref2","children","gap","justify","Text","fontSize","overflowWrap","VideoControls","styled","justifyContent","alignItems","alignSelf","LeftControls","RightControls","HMSVideo","forwardRef","videoRef","props","__objRest","setWidth","useState","useEffect","updatingVideoWidth","videoEl2","current","videoWidth","videoHeight","videoEl","addEventListener","removeEventListener","React2","__spreadValues","size","transition","isFullScreen","color","whiteSpace","fontStyle","fontWeight","lineHeight","letterSpacing","boxShadow","margin","objectFit","maxWidth","ref","playsInline","disablePictureInPicture","HMSPlayerContext","React3","hlsPlayer","useHMSPlayerContext","useContext","PlayPauseButton","_ref3","isPaused","hlsPlayer2","React4","Tooltip","title","side","IconButton","event","__async","stopPropagation","play","pause","PlayIcon","PauseIcon","SeekControl","_ref4","React5","getPercentage","a","b","getDurationFromSeconds2","getDuration","isFinite","duration","seekable","length","end","VolumeIcon","_ref8","volume","React9","VolumeZeroIcon","VolumeOneIcon","VolumeTwoIcon","HMSVideoPlayer","Root","Progress","_ref7","seekProgress","setSeekProgress","videoProgress","setVideoProgress","useState2","bufferProgress","setBufferProgress","getVideoElement","setProgress","useCallback","videoProgress2","currentTime","bufferProgress2","buffered","isNaN","timeupdateHandler","useEffect2","React7","h","Slider","min","max","step","value","showTooltip","onValueChange","progress","progress1","seekTo","onPointerDown","onPointerUp","thumbStyles","w","Box","background","left","opacity","Duration","VideoTime","videoTime","setVideoTime","useState3","updateTime","useCallback2","useEffect3","on","HMSHLSPlayerEvents","CURRENT_TIME","off","React8","variant","minWidth","c","display","Volume","VolumeControl","setVolume","useState4","showSlider","setShowSlider","onMouseOver","onMouseLeave","mx","volume2","Controls","Left","Right","PlayPauseSeekControls","Overlay","_ref6","showControls","hoverControlsVisible","isMobile","useMedia","config","media","md","isLandscape","useIsLandscape","React6","bg","visibility","seekBackward","BackwardArrowIcon","r","seekForward","ForwardArrowIcon","pausePlay","Button","_ref5","onSeekTo","FullScreenButton","_ref9","onToggle","React10","key","ShrinkIcon","ExpandIcon","HLSAutoplayBlockedPrompt","_ref10","open","unblockAutoPlay","useMedia2","React11","border","VolumeTwoIcon2","px","Dialog","onOpenChange","DialogContent","closeable","DialogRow","HLSCaptionSelector","_ref11","isEnabled","React12","p","toggleCaption","ClosedCaptionIcon","OpenCaptionIcon","HLSQualitySelector","_ref12","layers","onQualityChange","selection","isAuto","containerRef","useMedia3","React13","Sheet","Trigger","asChild","SettingsIcon","Content","container","pb","Title","mt","borderBottom","Close","CrossIcon2","map","layer","py","getQualityText","flex","pl","getBitrateText","CheckIcon","Dropdown","modal","ml","Portal","sideOffset","maxHeight","Item","Number","HLSViewTitle","details","description","useRoomLayoutHeader","toggleDetailsPane","useSidepaneToggle","SIDE_PANE_OPTIONS","ROOM_DETAILS","useIsSidepaneTypeOpen","React14","ChevronDownIcon","Logo","RoomDetailsRow","toastMap","ToggleChat","_ref13","elements","useRoomLayoutConferencingScreen","sidepane","useHMSStore","selectAppData","APP_DATA","sidePane","toggleChat","CHAT","showChat","chat","useMedia4","hmsActions","useHMSActions","useEffect4","match","with","setAppData","P","when","otherwise","HLSView_default","HLSView","_d","_e","_f","_g","useRef","hlsViewRef","hlsState","selectHLSState","enablHlsStats","hlsStats","notification","useHMSNotifications","HMSNotificationTypes","POLL_STOPPED","themeType","useTheme","streamEnded","setStreamEnded","useState5","setHlsStatsState","hlsUrl","variants","availableLayers","setAvailableLayers","isVideoLive","setIsVideoLive","isCaptionEnabled","setIsCaptionEnabled","hasCaptions","setHasCaptions","currentSelectedQuality","setCurrentSelectedQuality","isHlsAutoplayBlocked","setIsHlsAutoplayBlocked","setHoverControlsVisible","setIsPaused","show","toggle","useToggle","lastHlsUrl","usePrevious","vanillaStore","useHMSVanillaStore","controlsVisible","setControlsVisible","isUserSelectedAuto","setIsUserSelectedAuto","qualityDropDownOpen","setQualityDropDownOpen","controlsRef","controlsTimerRef","isFullScreenSupported","screenfull","useFullscreen","showLoader","setShowLoader","showLoader2","hideLoader","data","ToastManager","removeToast","videoElem","setStreamEndedCallback","handleQuality","useCallback3","quality","_a2","toString","toLowerCase","setLayer","manifestLoadedHandler","_ref14","layerUpdatedHandler","_ref15","metadataLoadedHandler","_a3","_b2","payload","parsedPayload","str","JSON","parse","parsePayload","startsWith","pollId","substr","indexOf","poll","getState","selectPollByID","pollStartedBy","selectPeerNameByID","startedBy","toastID","addToast","type","action","React15","pollState","POLL_STATE","pollInView","view","POLL_VIEWS","VOTE","POLLS","Infinity","EMOJI_REACTION_TYPE","window","showFlyingEmoji","call","emojiId","senderId","toast","console","debug","stringify","handleError","error","handleNoLongerLive","_ref16","isLive","playbackEventHandler","HLSPlaybackState","paused","__spreadProps","setTimeout","captionEnabledEventHandler","isCaptionEnabled2","handleAutoplayBlock","HMSHLSPlayer","HMSHLSPlayerEvents2","SEEK_POS_BEHIND_LIVE_EDGE","TIMED_METADATA_LOADED","ERROR","PLAYBACK_STATE","CAPTION_ENABLED","AUTOPLAY_BLOCKED","MANIFEST_LOADED","LAYER_UPDATED","reset","onHLSStats","STATS","message","clearTimeout","seek","onDoubleClickHandler","playlist_type","HLSPlaylistType","DVR","screenX","clientWidth","onClickHandler","_ref17","isMobile2","isLandscape2","onHoverHandler","preventDefault","keyHandler","useKeyboardHandler","LeaveRoom","screenType","WaitingView","icon","ColoredHandIcon","subtitle","GoLiveIcon","Provider","sfnOverlayClose","outline","onKeyDown","tabIndex","Loading","onMouseEnter","onMouseMove","onDoubleClick","flexShrink","ChatToggle","bottom","theme","colors","background_dim","pt","seekToLivePosition"],"sourceRoot":""}